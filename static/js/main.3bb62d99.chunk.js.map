{"version":3,"sources":["actions/index.js","components/Timer.js","components/TimerController.js","components/HamburgurButton.js","components/TimerForm.js","components/Toolbar.js","reducers/timerReducer.js","reducers/index.js","index.js","components/App.js","assets/notifications/just-saying.mp3","assets/notifications/just-saying.ogg","assets/notifications/just-saying.m4a"],"names":["timer","setTimer","minutes","type","payload","tick","stopTimer","clearInterval","Timer","formatMilliSec","milliseconds","Math","floor","seconds","formatedSeconds","slice","className","this","props","time","toUpperCase","Component","TimerController","audioRef","React","createRef","toggleTimerState","e","timerIsOn","startTimer","onReset","workTimerAmount","resetTimer","breakTimerAmount","onSkip","count","rounds","resetToOriginal","skipTimer","current","play","icon","faPause","faPlay","timerAmount","setTimeout","ref","src","mp3","ogg","m4r","onClick","renderButtonIcon","ceil","faStepForward","connect","state","form","timerForm","values","work","break","isTimerOn","dispatch","setInterval","HamburgurButton","toggleMenu","TimerForm","formatMinutes","renderField","input","onChange","value","label","min","max","Field","name","component","reduxForm","Toolbar","menuOpen","prevWorkTimerAmount","prevBreakTimerAmount","verifyTimerAmountChanges","gatherPreviousTimerAmounts","setState","resetCurrentTimerIteration","initialValues","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3bb62d99.chunk.js","sourcesContent":["let timer = null;\n\nexport const setTimer = minutes => {\n  return {\n    type: \"TIMER_SET\",\n    payload: minutes\n  };\n};\n\nexport const startTimer = () => dispatch => {\n  clearInterval(timer);\n  timer = setInterval(() => dispatch(tick()), 1000);\n  dispatch({ type: \"TIMER_START\" });\n  dispatch(tick());\n};\n\nconst tick = () => {\n  return { type: \"TIMER_TICK\" };\n};\n\nexport const stopTimer = () => {\n  clearInterval(timer);\n  return { type: \"TIMER_STOP\" };\n};\n\nexport const resetToOriginal = minutes => dispatch => {\n  clearInterval(timer);\n  dispatch({ type: \"RESET_T0_ORIGINAL\" });\n  dispatch(setTimer(minutes));\n};\n\nexport const resetTimer = minutes => dispatch => {\n  clearInterval(timer);\n  dispatch({ type: \"RESET_TIMER\" });\n  dispatch(setTimer(minutes));\n};\n\nexport const skipTimer = minutes => dispatch => {\n  dispatch({ type: \"SKIP_TIMER\" });\n  dispatch(setTimer(minutes));\n};\n","import React, { Component } from \"react\";\nimport \"../scss/Timer.scss\";\n\nclass Timer extends Component {\n  formatMilliSec = milliseconds => {\n    const minutes = Math.floor(\n      (milliseconds % (1000 * 60 * 60 + 1)) / (1000 * 60)\n    );\n    const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\n\n    const formatedSeconds = `0${seconds}`.slice(-2);\n\n    return `${minutes}:${formatedSeconds}`;\n  };\n\n  render() {\n    return (\n      <div className=\"timer\">\n        <h1 className=\"timer__display\">\n          {this.formatMilliSec(this.props.time)}\n        </h1>\n        <h3 className=\"timer__type\">{this.props.type.toUpperCase()}</h3>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStepForward,\n  faPlay,\n  faPause\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setTimer,\n  startTimer,\n  stopTimer,\n  resetToOriginal,\n  resetTimer,\n  skipTimer\n} from \"../actions\";\nimport Timer from \"./Timer\";\nimport mp3 from \"../assets/notifications/just-saying.mp3\";\nimport ogg from \"../assets/notifications/just-saying.ogg\";\nimport m4r from \"../assets/notifications/just-saying.m4a\";\nimport \"../scss/TimerController.scss\";\n\nexport class TimerController extends Component {\n  audioRef = React.createRef();\n  toggleTimerState = e => {\n    if (this.props.timerIsOn) {\n      this.props.stopTimer();\n    } else {\n      this.props.startTimer();\n    }\n  };\n\n  renderButtonIcon(timerIsOn) {\n    return <FontAwesomeIcon icon={timerIsOn ? faPause : faPlay} />;\n  }\n\n  onReset = () => {\n    if (this.props.type === \"work\") {\n      if (this.props.time !== this.props.workTimerAmount * 60000) {\n        this.props.resetTimer(this.props.workTimerAmount);\n      }\n    } else if (this.props.type === \"break\") {\n      if (this.props.time !== this.props.breakTimerAmount * 60000) {\n        this.props.resetTimer(this.props.breakTimerAmount);\n      }\n    }\n  };\n\n  onSkip = () => {\n    if (this.props.count === this.props.rounds * 2) {\n      this.props.resetToOriginal(this.props.workTimerAmount);\n    } else {\n      if (this.props.type === \"work\") {\n        this.props.skipTimer(this.props.breakTimerAmount);\n      } else if (this.props.type === \"break\") {\n        this.props.skipTimer(this.props.workTimerAmount);\n      }\n    }\n    this.audioRef.current.play();\n  };\n\n  componentDidMount() {\n    this.props.setTimer(this.props.workTimerAmount);\n  }\n\n  componentDidUpdate() {\n    if (this.props.time === 0 && this.props.count < this.props.rounds * 2) {\n      this.props.stopTimer();\n      const timerAmount =\n        this.props.type === \"work\"\n          ? this.props.breakTimerAmount\n          : this.props.workTimerAmount;\n      this.props.setTimer(timerAmount);\n      this.audioRef.current.play();\n\n      setTimeout(() => {\n        this.props.startTimer();\n      }, 2000);\n    } else if (this.props.time === 0) {\n      this.props.stopTimer();\n      this.audioRef.current.play();\n      this.props.resetToOriginal(this.props.workTimerAmount);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"timer-controller\">\n        <audio ref={this.audioRef}>\n          <source src={mp3} type=\"audio/mpeg\" />\n          <source src={ogg} type=\"audio/ogg\" />\n          <source src={m4r} type=\"audio/mp4\" />\n        </audio>\n        <Timer time={this.props.time} type={this.props.type} />\n        <div className=\"control-panel\">\n          <div className=\"control-panel__start\" onClick={this.toggleTimerState}>\n            {this.renderButtonIcon(this.props.timerIsOn)}\n          </div>\n          <div className=\"control-panel__menu\">\n            <div className=\"control-panel__menu-left\">\n              <h3>\n                {Math.ceil(this.props.count / 2)}/{this.props.rounds}\n              </h3>\n              <p onClick={this.onReset} className=\"control-panel__reset\">\n                Reset\n              </p>\n            </div>\n            <div className=\"control-panel__menu-right\">\n              <div onClick={this.onSkip} className=\"control-panel__skip\">\n                <FontAwesomeIcon icon={faStepForward} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { work: workTimerAmount, break: breakTimerAmount, rounds } = state.form\n    .timerForm?.values ?? { work: 0, break: 0, rounds: 0 };\n  return {\n    time: state.timer.time,\n    type: state.timer.type,\n    count: state.timer.count,\n    workTimerAmount,\n    breakTimerAmount,\n    rounds,\n    timerIsOn: state.timer.isTimerOn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTimer,\n  startTimer,\n  stopTimer,\n  resetToOriginal,\n  resetTimer,\n  skipTimer\n})(TimerController);\n","import React from \"react\";\nimport \"../scss/HamburgerButton.scss\";\n\nexport default function HamburgurButton(props) {\n  const toggleMenu = () => {\n    props.toggleMenu();\n  };\n\n  return (\n    <button onClick={toggleMenu} className=\"hamburger-button\">\n      <div className=\"hamburger-button__line\"></div>\n      <div className=\"hamburger-button__line\"></div>\n      <div className=\"hamburger-button__line\"></div>\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport \"../scss/TimerForm.scss\";\n\nexport class TimerForm extends Component {\n  formatMinutes = minutes => {\n    return `${minutes}:00`;\n  };\n\n  renderField = ({ input: { onChange, value }, label, type, min, max }) => {\n    return (\n      <div className=\"form-control\">\n        <label className=\"form-control__label\">{label}</label>\n        <p className=\"form-control__value\">\n          {label === \"Rounds\" ? value : this.formatMinutes(value)}\n        </p>\n        <div>\n          <input\n            className=\"form-control__input\"\n            onChange={onChange}\n            type={type}\n            min={min}\n            max={max}\n            value={value}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <p className=\"menu__header\">Timer</p>\n        <form className=\"menu__form\">\n          <Field\n            name=\"work\"\n            type=\"range\"\n            min=\"1\"\n            max=\"60\"\n            component={this.renderField}\n            label=\"Work\"\n          />\n          <Field\n            name=\"break\"\n            type=\"range\"\n            min=\"1\"\n            max=\"60\"\n            component={this.renderField}\n            label=\"Break\"\n          />\n          <Field\n            name=\"rounds\"\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            component={this.renderField}\n            label=\"Rounds\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: \"timerForm\"\n})(TimerForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTimer, stopTimer } from \"../actions\";\nimport HamburgerButton from \"./HamburgurButton\";\nimport TimerForm from \"./TimerForm\";\nimport \"../scss/Toolbar.scss\";\n\nclass Toolbar extends Component {\n  state = { menuOpen: false };\n  prevWorkTimerAmount = 0;\n  prevBreakTimerAmount = 0;\n\n  toggleMenu = () => {\n    if (this.state.menuOpen) {\n      this.verifyTimerAmountChanges();\n    } else {\n      this.gatherPreviousTimerAmounts();\n    }\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n\n  gatherPreviousTimerAmounts() {\n    this.prevWorkTimerAmount = this.props.workTimerAmount;\n    this.prevBreakTimerAmount = this.props.breakTimerAmount;\n  }\n\n  verifyTimerAmountChanges() {\n    if (\n      this.props.type === \"work\" &&\n      this.prevWorkTimerAmount !== this.props.workTimerAmount\n    ) {\n      this.resetCurrentTimerIteration(this.props.workTimerAmount);\n    } else if (\n      this.props.type === \"break\" &&\n      this.prevBreakTimerAmount !== this.props.breakTimerAmount\n    ) {\n      this.resetCurrentTimerIteration(this.props.breakTimerAmount);\n    }\n  }\n\n  resetCurrentTimerIteration(timerAmount) {\n    if (this.props.timerIsOn) {\n      this.props.stopTimer();\n    }\n    this.props.setTimer(timerAmount);\n  }\n\n  render() {\n    return (\n      <div className=\"toolbar\">\n        <div className=\"toolbar__nav\">\n          <div>\n            <HamburgerButton toggleMenu={this.toggleMenu} />\n          </div>\n          <div className=\"toolbar__title\">Pomodoro</div>\n        </div>\n        <div\n          className={\n            this.state.menuOpen\n              ? \"toolbar__menu toolbar__menu--open\"\n              : \"toolbar__menu\"\n          }\n        >\n          <TimerForm initialValues={{ work: 1, break: 1, rounds: 1 }} />\n        </div>\n        <div className=\"toolbar__footer\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { work: workTimerAmount, break: breakTimerAmount } = state.form\n    .timerForm?.values ?? {\n    work: 0,\n    break: 0\n  };\n\n  return {\n    type: state.timer.type,\n    timerIsOn: state.timer.isTimerOn,\n    workTimerAmount,\n    breakTimerAmount\n  };\n};\n\nexport default connect(mapStateToProps, {\n  stopTimer,\n  setTimer\n})(Toolbar);\n","const INITIAL_STATE = {\n  time: 0,\n  type: \"work\",\n  count: 1,\n  isTimerOn: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  let type;\n  switch (action.type) {\n    case \"RESET_T0_ORIGINAL\":\n      return { ...INITIAL_STATE };\n    case \"TIMER_SET\":\n      return { ...state, time: action.payload * 60000 };\n    case \"TIMER_TICK\":\n      return { ...state, time: state.time - 1000 };\n    case \"TIMER_STOP\":\n      type = state.type === \"work\" ? \"break\" : \"work\";\n      if (state.time === 0) {\n        return {\n          ...state,\n          type,\n          count: state.count + 1,\n          isTimerOn: !state.isTimerOn\n        };\n      }\n      return { ...state, isTimerOn: !state.isTimerOn };\n    case \"TIMER_START\":\n      return { ...state, isTimerOn: !state.isTimerOn };\n    case \"SKIP_TIMER\":\n      type = state.type === \"work\" ? \"break\" : \"work\";\n      return {\n        ...state,\n        type,\n        count: state.count + 1\n      };\n    case \"RESET_TIMER\":\n      return {\n        ...state,\n        isTimerOn: state.isTimerOn ? !state.isTimerOn : false\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport timerReducer from \"./timerReducer\";\n\nexport default combineReducers({\n  timer: timerReducer,\n  form: formReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport TimerController from \"./TimerController\";\nimport Toolbar from \"./Toolbar\";\nimport \"../scss/App.scss\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Toolbar />\n      <TimerController />\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/just-saying.594e6e42.mp3\";","module.exports = __webpack_public_path__ + \"static/media/just-saying.418b9aff.ogg\";","module.exports = __webpack_public_path__ + \"static/media/just-saying.ec10c895.m4a\";"],"sourceRoot":""}